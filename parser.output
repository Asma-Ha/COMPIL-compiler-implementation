Terminals unused in grammar

   TYPES
   AND
   OR
   NOT
   SUP
   SUPEQ
   INF
   INFEQ
   EQ
   NEQ


Grammar

    0 $accept: program $end

    1 program: header SECTDEFKEY MODELS CURLYSTART functions CURLYEND END SECTDEFKEY MAIN CURLYSTART ins_seq CURLYEND END KEY ENDPROG

    2 header: KEY PROGKEY IDENTIFIER

    3 ins_seq: /* empty */
    4        | instruction ins_seq

    5 functions: FUNKEY IDENTIFIER PARENTESESTART parameters PARENTESEEND TWODOTS returntype CURLYSTART ins_seq CURLYEND
    6          | /* empty */

    7 parameters: IDENTIFIER
    8           | parameters COMMA IDENTIFIER
    9           | /* empty */

   10 returntype: DECBOOL
   11           | DECINT
   12           | DECREAL
   13           | DECSTR

   14 instruction: declaration
   15            | assignment
   16            | condition
   17            | return
   18            | funcall

   19 return: RETURNKEY PARENTESESTART EXP PARENTESEEND END

   20 funcall: IDENTIFIER PARENTESESTART arguments PARENTESEEND END

   21 arguments: EXP
   22          | arguments COMMA EXP
   23          | /* empty */

   24 declaration: vardeclaration
   25            | constdeclaration

   26 vardeclaration: KEYVAR IDENTIFIER TWODOTS dectype END
   27               | KEYVAR IDENTIFIER TWODOTS dectype ASSIGN EXP END
   28               | KEYVAR IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART EXP BRACKETEND END
   29               | KEYVAR IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART EXP BRACKETEND ASSIGN BRACKETSTART types BRACKETEND END

   30 constdeclaration: KEYCONST IDENTIFIER TWODOTS dectype ASSIGN EXP END

   31 assignment: IDENTIFIER ASSIGN EXP END
   32           | listelement ASSIGN EXP END

   33 condition: KEYIF PARENTESESTART EXP PARENTESEEND KEYTHEN CURLYSTART ins_seq CURLYEND
   34          | KEYIF PARENTESESTART EXP PARENTESEEND KEYTHEN CURLYSTART ins_seq CURLYEND KEYELSE CURLYSTART ins_seq CURLYEND

   35 EXP: IDENTIFIER PARENTESESTART arguments PARENTESEEND
   36    | AEXP

   37 AEXP: TERM
   38     | AEXP PLUS AEXP
   39     | AEXP MINUS AEXP
   40     | AEXP DIV AEXP
   41     | AEXP MULT AEXP
   42     | PARENTESESTART AEXP PARENTESEEND
   43     | MINUS AEXP

   44 listelement: IDENTIFIER BRACKETSTART EXP BRACKETEND

   45 dectype: DECBOOL
   46        | DECINT
   47        | DECREAL
   48        | DECSTR

   49 type: TYPEBOOL
   50     | TYPEINT
   51     | TYPEREAL
   52     | TYPESTR

   53 types: type
   54      | types COMMA type
   55      | /* empty */

   56 TERM: IDENTIFIER
   57     | type
   58     | listelement


Terminals, with rules where they appear

$end (0) 0
error (256)
KEY (258) 1 2
PROGKEY (259) 2
SECTDEFKEY (260) 1
CURLYSTART (261) 1 5 28 29 33 34
CURLYEND (262) 1 5 28 29 33 34
TYPES (263)
MODELS (264) 1
MAIN (265) 1
END (266) 1 19 20 26 27 28 29 30 31 32
IDENTIFIER (267) 2 5 7 8 20 26 27 28 29 30 31 35 44 56
ENDPROG (268) 1
FUNKEY (269) 5
ASSIGN (270) 27 29 30 31 32
KEYVAR (271) 26 27 28 29
KEYCONST (272) 30
KEYIF (273) 33 34
KEYELSE (274) 34
KEYTHEN (275) 33 34
TYPEINT (276) 50
TYPEREAL (277) 51
TYPEBOOL (278) 49
TYPESTR (279) 52
TWODOTS (280) 5 26 27 30
DECINT (281) 11 46
DECREAL (282) 12 47
DECBOOL (283) 10 45
DECSTR (284) 13 48
COMMA (285) 8 22 54
RETURNKEY (286) 19
BRACKETSTART (287) 28 29 44
BRACKETEND (288) 28 29 44
PARENTESESTART (289) 5 19 20 33 34 35 42
PARENTESEEND (290) 5 19 20 33 34 35 42
AND (291)
OR (292)
NOT (293)
PLUS (294) 38
MINUS (295) 39 43
MULT (296) 41
DIV (297) 40
SUP (298)
SUPEQ (299)
INF (300)
INFEQ (301)
EQ (302)
NEQ (303)
NEG (304)


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
program (51)
    on left: 1, on right: 0
header (52)
    on left: 2, on right: 1
ins_seq (53)
    on left: 3 4, on right: 1 4 5 33 34
functions (54)
    on left: 5 6, on right: 1
parameters (55)
    on left: 7 8 9, on right: 5 8
returntype (56)
    on left: 10 11 12 13, on right: 5
instruction (57)
    on left: 14 15 16 17 18, on right: 4
return (58)
    on left: 19, on right: 17
funcall (59)
    on left: 20, on right: 18
arguments (60)
    on left: 21 22 23, on right: 20 22 35
declaration (61)
    on left: 24 25, on right: 14
vardeclaration (62)
    on left: 26 27 28 29, on right: 24
constdeclaration (63)
    on left: 30, on right: 25
assignment (64)
    on left: 31 32, on right: 15
condition (65)
    on left: 33 34, on right: 16
EXP (66)
    on left: 35 36, on right: 19 21 22 27 28 29 30 31 32 33 34 44
AEXP (67)
    on left: 37 38 39 40 41 42 43, on right: 36 38 39 40 41 42 43
listelement (68)
    on left: 44, on right: 32 58
dectype (69)
    on left: 45 46 47 48, on right: 26 27 28 29 30
type (70)
    on left: 49 50 51 52, on right: 53 54 57
types (71)
    on left: 53 54 55, on right: 29 54
TERM (72)
    on left: 56 57 58, on right: 37


State 0

    0 $accept: . program $end

    KEY  shift, and go to state 1

    program  go to state 2
    header   go to state 3


State 1

    2 header: KEY . PROGKEY IDENTIFIER

    PROGKEY  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: header . SECTDEFKEY MODELS CURLYSTART functions CURLYEND END SECTDEFKEY MAIN CURLYSTART ins_seq CURLYEND END KEY ENDPROG

    SECTDEFKEY  shift, and go to state 6


State 4

    2 header: KEY PROGKEY . IDENTIFIER

    IDENTIFIER  shift, and go to state 7


State 5

    0 $accept: program $end .

    $default  accept


State 6

    1 program: header SECTDEFKEY . MODELS CURLYSTART functions CURLYEND END SECTDEFKEY MAIN CURLYSTART ins_seq CURLYEND END KEY ENDPROG

    MODELS  shift, and go to state 8


State 7

    2 header: KEY PROGKEY IDENTIFIER .

    $default  reduce using rule 2 (header)


State 8

    1 program: header SECTDEFKEY MODELS . CURLYSTART functions CURLYEND END SECTDEFKEY MAIN CURLYSTART ins_seq CURLYEND END KEY ENDPROG

    CURLYSTART  shift, and go to state 9


State 9

    1 program: header SECTDEFKEY MODELS CURLYSTART . functions CURLYEND END SECTDEFKEY MAIN CURLYSTART ins_seq CURLYEND END KEY ENDPROG

    FUNKEY  shift, and go to state 10

    $default  reduce using rule 6 (functions)

    functions  go to state 11


State 10

    5 functions: FUNKEY . IDENTIFIER PARENTESESTART parameters PARENTESEEND TWODOTS returntype CURLYSTART ins_seq CURLYEND

    IDENTIFIER  shift, and go to state 12


State 11

    1 program: header SECTDEFKEY MODELS CURLYSTART functions . CURLYEND END SECTDEFKEY MAIN CURLYSTART ins_seq CURLYEND END KEY ENDPROG

    CURLYEND  shift, and go to state 13


State 12

    5 functions: FUNKEY IDENTIFIER . PARENTESESTART parameters PARENTESEEND TWODOTS returntype CURLYSTART ins_seq CURLYEND

    PARENTESESTART  shift, and go to state 14


State 13

    1 program: header SECTDEFKEY MODELS CURLYSTART functions CURLYEND . END SECTDEFKEY MAIN CURLYSTART ins_seq CURLYEND END KEY ENDPROG

    END  shift, and go to state 15


State 14

    5 functions: FUNKEY IDENTIFIER PARENTESESTART . parameters PARENTESEEND TWODOTS returntype CURLYSTART ins_seq CURLYEND

    IDENTIFIER  shift, and go to state 16

    $default  reduce using rule 9 (parameters)

    parameters  go to state 17


State 15

    1 program: header SECTDEFKEY MODELS CURLYSTART functions CURLYEND END . SECTDEFKEY MAIN CURLYSTART ins_seq CURLYEND END KEY ENDPROG

    SECTDEFKEY  shift, and go to state 18


State 16

    7 parameters: IDENTIFIER .

    $default  reduce using rule 7 (parameters)


State 17

    5 functions: FUNKEY IDENTIFIER PARENTESESTART parameters . PARENTESEEND TWODOTS returntype CURLYSTART ins_seq CURLYEND
    8 parameters: parameters . COMMA IDENTIFIER

    COMMA         shift, and go to state 19
    PARENTESEEND  shift, and go to state 20


State 18

    1 program: header SECTDEFKEY MODELS CURLYSTART functions CURLYEND END SECTDEFKEY . MAIN CURLYSTART ins_seq CURLYEND END KEY ENDPROG

    MAIN  shift, and go to state 21


State 19

    8 parameters: parameters COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 22


State 20

    5 functions: FUNKEY IDENTIFIER PARENTESESTART parameters PARENTESEEND . TWODOTS returntype CURLYSTART ins_seq CURLYEND

    TWODOTS  shift, and go to state 23


State 21

    1 program: header SECTDEFKEY MODELS CURLYSTART functions CURLYEND END SECTDEFKEY MAIN . CURLYSTART ins_seq CURLYEND END KEY ENDPROG

    CURLYSTART  shift, and go to state 24


State 22

    8 parameters: parameters COMMA IDENTIFIER .

    $default  reduce using rule 8 (parameters)


State 23

    5 functions: FUNKEY IDENTIFIER PARENTESESTART parameters PARENTESEEND TWODOTS . returntype CURLYSTART ins_seq CURLYEND

    DECINT   shift, and go to state 25
    DECREAL  shift, and go to state 26
    DECBOOL  shift, and go to state 27
    DECSTR   shift, and go to state 28

    returntype  go to state 29


State 24

    1 program: header SECTDEFKEY MODELS CURLYSTART functions CURLYEND END SECTDEFKEY MAIN CURLYSTART . ins_seq CURLYEND END KEY ENDPROG

    IDENTIFIER  shift, and go to state 30
    KEYVAR      shift, and go to state 31
    KEYCONST    shift, and go to state 32
    KEYIF       shift, and go to state 33
    RETURNKEY   shift, and go to state 34

    $default  reduce using rule 3 (ins_seq)

    ins_seq           go to state 35
    instruction       go to state 36
    return            go to state 37
    funcall           go to state 38
    declaration       go to state 39
    vardeclaration    go to state 40
    constdeclaration  go to state 41
    assignment        go to state 42
    condition         go to state 43
    listelement       go to state 44


State 25

   11 returntype: DECINT .

    $default  reduce using rule 11 (returntype)


State 26

   12 returntype: DECREAL .

    $default  reduce using rule 12 (returntype)


State 27

   10 returntype: DECBOOL .

    $default  reduce using rule 10 (returntype)


State 28

   13 returntype: DECSTR .

    $default  reduce using rule 13 (returntype)


State 29

    5 functions: FUNKEY IDENTIFIER PARENTESESTART parameters PARENTESEEND TWODOTS returntype . CURLYSTART ins_seq CURLYEND

    CURLYSTART  shift, and go to state 45


State 30

   20 funcall: IDENTIFIER . PARENTESESTART arguments PARENTESEEND END
   31 assignment: IDENTIFIER . ASSIGN EXP END
   44 listelement: IDENTIFIER . BRACKETSTART EXP BRACKETEND

    ASSIGN          shift, and go to state 46
    BRACKETSTART    shift, and go to state 47
    PARENTESESTART  shift, and go to state 48


State 31

   26 vardeclaration: KEYVAR . IDENTIFIER TWODOTS dectype END
   27               | KEYVAR . IDENTIFIER TWODOTS dectype ASSIGN EXP END
   28               | KEYVAR . IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART EXP BRACKETEND END
   29               | KEYVAR . IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART EXP BRACKETEND ASSIGN BRACKETSTART types BRACKETEND END

    IDENTIFIER  shift, and go to state 49


State 32

   30 constdeclaration: KEYCONST . IDENTIFIER TWODOTS dectype ASSIGN EXP END

    IDENTIFIER  shift, and go to state 50


State 33

   33 condition: KEYIF . PARENTESESTART EXP PARENTESEEND KEYTHEN CURLYSTART ins_seq CURLYEND
   34          | KEYIF . PARENTESESTART EXP PARENTESEEND KEYTHEN CURLYSTART ins_seq CURLYEND KEYELSE CURLYSTART ins_seq CURLYEND

    PARENTESESTART  shift, and go to state 51


State 34

   19 return: RETURNKEY . PARENTESESTART EXP PARENTESEEND END

    PARENTESESTART  shift, and go to state 52


State 35

    1 program: header SECTDEFKEY MODELS CURLYSTART functions CURLYEND END SECTDEFKEY MAIN CURLYSTART ins_seq . CURLYEND END KEY ENDPROG

    CURLYEND  shift, and go to state 53


State 36

    4 ins_seq: instruction . ins_seq

    IDENTIFIER  shift, and go to state 30
    KEYVAR      shift, and go to state 31
    KEYCONST    shift, and go to state 32
    KEYIF       shift, and go to state 33
    RETURNKEY   shift, and go to state 34

    $default  reduce using rule 3 (ins_seq)

    ins_seq           go to state 54
    instruction       go to state 36
    return            go to state 37
    funcall           go to state 38
    declaration       go to state 39
    vardeclaration    go to state 40
    constdeclaration  go to state 41
    assignment        go to state 42
    condition         go to state 43
    listelement       go to state 44


State 37

   17 instruction: return .

    $default  reduce using rule 17 (instruction)


State 38

   18 instruction: funcall .

    $default  reduce using rule 18 (instruction)


State 39

   14 instruction: declaration .

    $default  reduce using rule 14 (instruction)


State 40

   24 declaration: vardeclaration .

    $default  reduce using rule 24 (declaration)


State 41

   25 declaration: constdeclaration .

    $default  reduce using rule 25 (declaration)


State 42

   15 instruction: assignment .

    $default  reduce using rule 15 (instruction)


State 43

   16 instruction: condition .

    $default  reduce using rule 16 (instruction)


State 44

   32 assignment: listelement . ASSIGN EXP END

    ASSIGN  shift, and go to state 55


State 45

    5 functions: FUNKEY IDENTIFIER PARENTESESTART parameters PARENTESEEND TWODOTS returntype CURLYSTART . ins_seq CURLYEND

    IDENTIFIER  shift, and go to state 30
    KEYVAR      shift, and go to state 31
    KEYCONST    shift, and go to state 32
    KEYIF       shift, and go to state 33
    RETURNKEY   shift, and go to state 34

    $default  reduce using rule 3 (ins_seq)

    ins_seq           go to state 56
    instruction       go to state 36
    return            go to state 37
    funcall           go to state 38
    declaration       go to state 39
    vardeclaration    go to state 40
    constdeclaration  go to state 41
    assignment        go to state 42
    condition         go to state 43
    listelement       go to state 44


State 46

   31 assignment: IDENTIFIER ASSIGN . EXP END

    IDENTIFIER      shift, and go to state 57
    TYPEINT         shift, and go to state 58
    TYPEREAL        shift, and go to state 59
    TYPEBOOL        shift, and go to state 60
    TYPESTR         shift, and go to state 61
    PARENTESESTART  shift, and go to state 62
    MINUS           shift, and go to state 63

    EXP          go to state 64
    AEXP         go to state 65
    listelement  go to state 66
    type         go to state 67
    TERM         go to state 68


State 47

   44 listelement: IDENTIFIER BRACKETSTART . EXP BRACKETEND

    IDENTIFIER      shift, and go to state 57
    TYPEINT         shift, and go to state 58
    TYPEREAL        shift, and go to state 59
    TYPEBOOL        shift, and go to state 60
    TYPESTR         shift, and go to state 61
    PARENTESESTART  shift, and go to state 62
    MINUS           shift, and go to state 63

    EXP          go to state 69
    AEXP         go to state 65
    listelement  go to state 66
    type         go to state 67
    TERM         go to state 68


State 48

   20 funcall: IDENTIFIER PARENTESESTART . arguments PARENTESEEND END

    IDENTIFIER      shift, and go to state 57
    TYPEINT         shift, and go to state 58
    TYPEREAL        shift, and go to state 59
    TYPEBOOL        shift, and go to state 60
    TYPESTR         shift, and go to state 61
    PARENTESESTART  shift, and go to state 62
    MINUS           shift, and go to state 63

    $default  reduce using rule 23 (arguments)

    arguments    go to state 70
    EXP          go to state 71
    AEXP         go to state 65
    listelement  go to state 66
    type         go to state 67
    TERM         go to state 68


State 49

   26 vardeclaration: KEYVAR IDENTIFIER . TWODOTS dectype END
   27               | KEYVAR IDENTIFIER . TWODOTS dectype ASSIGN EXP END
   28               | KEYVAR IDENTIFIER . CURLYSTART dectype CURLYEND BRACKETSTART EXP BRACKETEND END
   29               | KEYVAR IDENTIFIER . CURLYSTART dectype CURLYEND BRACKETSTART EXP BRACKETEND ASSIGN BRACKETSTART types BRACKETEND END

    CURLYSTART  shift, and go to state 72
    TWODOTS     shift, and go to state 73


State 50

   30 constdeclaration: KEYCONST IDENTIFIER . TWODOTS dectype ASSIGN EXP END

    TWODOTS  shift, and go to state 74


State 51

   33 condition: KEYIF PARENTESESTART . EXP PARENTESEEND KEYTHEN CURLYSTART ins_seq CURLYEND
   34          | KEYIF PARENTESESTART . EXP PARENTESEEND KEYTHEN CURLYSTART ins_seq CURLYEND KEYELSE CURLYSTART ins_seq CURLYEND

    IDENTIFIER      shift, and go to state 57
    TYPEINT         shift, and go to state 58
    TYPEREAL        shift, and go to state 59
    TYPEBOOL        shift, and go to state 60
    TYPESTR         shift, and go to state 61
    PARENTESESTART  shift, and go to state 62
    MINUS           shift, and go to state 63

    EXP          go to state 75
    AEXP         go to state 65
    listelement  go to state 66
    type         go to state 67
    TERM         go to state 68


State 52

   19 return: RETURNKEY PARENTESESTART . EXP PARENTESEEND END

    IDENTIFIER      shift, and go to state 57
    TYPEINT         shift, and go to state 58
    TYPEREAL        shift, and go to state 59
    TYPEBOOL        shift, and go to state 60
    TYPESTR         shift, and go to state 61
    PARENTESESTART  shift, and go to state 62
    MINUS           shift, and go to state 63

    EXP          go to state 76
    AEXP         go to state 65
    listelement  go to state 66
    type         go to state 67
    TERM         go to state 68


State 53

    1 program: header SECTDEFKEY MODELS CURLYSTART functions CURLYEND END SECTDEFKEY MAIN CURLYSTART ins_seq CURLYEND . END KEY ENDPROG

    END  shift, and go to state 77


State 54

    4 ins_seq: instruction ins_seq .

    $default  reduce using rule 4 (ins_seq)


State 55

   32 assignment: listelement ASSIGN . EXP END

    IDENTIFIER      shift, and go to state 57
    TYPEINT         shift, and go to state 58
    TYPEREAL        shift, and go to state 59
    TYPEBOOL        shift, and go to state 60
    TYPESTR         shift, and go to state 61
    PARENTESESTART  shift, and go to state 62
    MINUS           shift, and go to state 63

    EXP          go to state 78
    AEXP         go to state 65
    listelement  go to state 66
    type         go to state 67
    TERM         go to state 68


State 56

    5 functions: FUNKEY IDENTIFIER PARENTESESTART parameters PARENTESEEND TWODOTS returntype CURLYSTART ins_seq . CURLYEND

    CURLYEND  shift, and go to state 79


State 57

   35 EXP: IDENTIFIER . PARENTESESTART arguments PARENTESEEND
   44 listelement: IDENTIFIER . BRACKETSTART EXP BRACKETEND
   56 TERM: IDENTIFIER .

    BRACKETSTART    shift, and go to state 47
    PARENTESESTART  shift, and go to state 80

    $default  reduce using rule 56 (TERM)


State 58

   50 type: TYPEINT .

    $default  reduce using rule 50 (type)


State 59

   51 type: TYPEREAL .

    $default  reduce using rule 51 (type)


State 60

   49 type: TYPEBOOL .

    $default  reduce using rule 49 (type)


State 61

   52 type: TYPESTR .

    $default  reduce using rule 52 (type)


State 62

   42 AEXP: PARENTESESTART . AEXP PARENTESEEND

    IDENTIFIER      shift, and go to state 81
    TYPEINT         shift, and go to state 58
    TYPEREAL        shift, and go to state 59
    TYPEBOOL        shift, and go to state 60
    TYPESTR         shift, and go to state 61
    PARENTESESTART  shift, and go to state 62
    MINUS           shift, and go to state 63

    AEXP         go to state 82
    listelement  go to state 66
    type         go to state 67
    TERM         go to state 68


State 63

   43 AEXP: MINUS . AEXP

    IDENTIFIER      shift, and go to state 81
    TYPEINT         shift, and go to state 58
    TYPEREAL        shift, and go to state 59
    TYPEBOOL        shift, and go to state 60
    TYPESTR         shift, and go to state 61
    PARENTESESTART  shift, and go to state 62
    MINUS           shift, and go to state 63

    AEXP         go to state 83
    listelement  go to state 66
    type         go to state 67
    TERM         go to state 68


State 64

   31 assignment: IDENTIFIER ASSIGN EXP . END

    END  shift, and go to state 84


State 65

   36 EXP: AEXP .
   38 AEXP: AEXP . PLUS AEXP
   39     | AEXP . MINUS AEXP
   40     | AEXP . DIV AEXP
   41     | AEXP . MULT AEXP

    PLUS   shift, and go to state 85
    MINUS  shift, and go to state 86
    MULT   shift, and go to state 87
    DIV    shift, and go to state 88

    $default  reduce using rule 36 (EXP)


State 66

   58 TERM: listelement .

    $default  reduce using rule 58 (TERM)


State 67

   57 TERM: type .

    $default  reduce using rule 57 (TERM)


State 68

   37 AEXP: TERM .

    $default  reduce using rule 37 (AEXP)


State 69

   44 listelement: IDENTIFIER BRACKETSTART EXP . BRACKETEND

    BRACKETEND  shift, and go to state 89


State 70

   20 funcall: IDENTIFIER PARENTESESTART arguments . PARENTESEEND END
   22 arguments: arguments . COMMA EXP

    COMMA         shift, and go to state 90
    PARENTESEEND  shift, and go to state 91


State 71

   21 arguments: EXP .

    $default  reduce using rule 21 (arguments)


State 72

   28 vardeclaration: KEYVAR IDENTIFIER CURLYSTART . dectype CURLYEND BRACKETSTART EXP BRACKETEND END
   29               | KEYVAR IDENTIFIER CURLYSTART . dectype CURLYEND BRACKETSTART EXP BRACKETEND ASSIGN BRACKETSTART types BRACKETEND END

    DECINT   shift, and go to state 92
    DECREAL  shift, and go to state 93
    DECBOOL  shift, and go to state 94
    DECSTR   shift, and go to state 95

    dectype  go to state 96


State 73

   26 vardeclaration: KEYVAR IDENTIFIER TWODOTS . dectype END
   27               | KEYVAR IDENTIFIER TWODOTS . dectype ASSIGN EXP END

    DECINT   shift, and go to state 92
    DECREAL  shift, and go to state 93
    DECBOOL  shift, and go to state 94
    DECSTR   shift, and go to state 95

    dectype  go to state 97


State 74

   30 constdeclaration: KEYCONST IDENTIFIER TWODOTS . dectype ASSIGN EXP END

    DECINT   shift, and go to state 92
    DECREAL  shift, and go to state 93
    DECBOOL  shift, and go to state 94
    DECSTR   shift, and go to state 95

    dectype  go to state 98


State 75

   33 condition: KEYIF PARENTESESTART EXP . PARENTESEEND KEYTHEN CURLYSTART ins_seq CURLYEND
   34          | KEYIF PARENTESESTART EXP . PARENTESEEND KEYTHEN CURLYSTART ins_seq CURLYEND KEYELSE CURLYSTART ins_seq CURLYEND

    PARENTESEEND  shift, and go to state 99


State 76

   19 return: RETURNKEY PARENTESESTART EXP . PARENTESEEND END

    PARENTESEEND  shift, and go to state 100


State 77

    1 program: header SECTDEFKEY MODELS CURLYSTART functions CURLYEND END SECTDEFKEY MAIN CURLYSTART ins_seq CURLYEND END . KEY ENDPROG

    KEY  shift, and go to state 101


State 78

   32 assignment: listelement ASSIGN EXP . END

    END  shift, and go to state 102


State 79

    5 functions: FUNKEY IDENTIFIER PARENTESESTART parameters PARENTESEEND TWODOTS returntype CURLYSTART ins_seq CURLYEND .

    $default  reduce using rule 5 (functions)


State 80

   35 EXP: IDENTIFIER PARENTESESTART . arguments PARENTESEEND

    IDENTIFIER      shift, and go to state 57
    TYPEINT         shift, and go to state 58
    TYPEREAL        shift, and go to state 59
    TYPEBOOL        shift, and go to state 60
    TYPESTR         shift, and go to state 61
    PARENTESESTART  shift, and go to state 62
    MINUS           shift, and go to state 63

    $default  reduce using rule 23 (arguments)

    arguments    go to state 103
    EXP          go to state 71
    AEXP         go to state 65
    listelement  go to state 66
    type         go to state 67
    TERM         go to state 68


State 81

   44 listelement: IDENTIFIER . BRACKETSTART EXP BRACKETEND
   56 TERM: IDENTIFIER .

    BRACKETSTART  shift, and go to state 47

    $default  reduce using rule 56 (TERM)


State 82

   38 AEXP: AEXP . PLUS AEXP
   39     | AEXP . MINUS AEXP
   40     | AEXP . DIV AEXP
   41     | AEXP . MULT AEXP
   42     | PARENTESESTART AEXP . PARENTESEEND

    PARENTESEEND  shift, and go to state 104
    PLUS          shift, and go to state 85
    MINUS         shift, and go to state 86
    MULT          shift, and go to state 87
    DIV           shift, and go to state 88


State 83

   38 AEXP: AEXP . PLUS AEXP
   39     | AEXP . MINUS AEXP
   40     | AEXP . DIV AEXP
   41     | AEXP . MULT AEXP
   43     | MINUS AEXP .

    $default  reduce using rule 43 (AEXP)


State 84

   31 assignment: IDENTIFIER ASSIGN EXP END .

    $default  reduce using rule 31 (assignment)


State 85

   38 AEXP: AEXP PLUS . AEXP

    IDENTIFIER      shift, and go to state 81
    TYPEINT         shift, and go to state 58
    TYPEREAL        shift, and go to state 59
    TYPEBOOL        shift, and go to state 60
    TYPESTR         shift, and go to state 61
    PARENTESESTART  shift, and go to state 62
    MINUS           shift, and go to state 63

    AEXP         go to state 105
    listelement  go to state 66
    type         go to state 67
    TERM         go to state 68


State 86

   39 AEXP: AEXP MINUS . AEXP

    IDENTIFIER      shift, and go to state 81
    TYPEINT         shift, and go to state 58
    TYPEREAL        shift, and go to state 59
    TYPEBOOL        shift, and go to state 60
    TYPESTR         shift, and go to state 61
    PARENTESESTART  shift, and go to state 62
    MINUS           shift, and go to state 63

    AEXP         go to state 106
    listelement  go to state 66
    type         go to state 67
    TERM         go to state 68


State 87

   41 AEXP: AEXP MULT . AEXP

    IDENTIFIER      shift, and go to state 81
    TYPEINT         shift, and go to state 58
    TYPEREAL        shift, and go to state 59
    TYPEBOOL        shift, and go to state 60
    TYPESTR         shift, and go to state 61
    PARENTESESTART  shift, and go to state 62
    MINUS           shift, and go to state 63

    AEXP         go to state 107
    listelement  go to state 66
    type         go to state 67
    TERM         go to state 68


State 88

   40 AEXP: AEXP DIV . AEXP

    IDENTIFIER      shift, and go to state 81
    TYPEINT         shift, and go to state 58
    TYPEREAL        shift, and go to state 59
    TYPEBOOL        shift, and go to state 60
    TYPESTR         shift, and go to state 61
    PARENTESESTART  shift, and go to state 62
    MINUS           shift, and go to state 63

    AEXP         go to state 108
    listelement  go to state 66
    type         go to state 67
    TERM         go to state 68


State 89

   44 listelement: IDENTIFIER BRACKETSTART EXP BRACKETEND .

    $default  reduce using rule 44 (listelement)


State 90

   22 arguments: arguments COMMA . EXP

    IDENTIFIER      shift, and go to state 57
    TYPEINT         shift, and go to state 58
    TYPEREAL        shift, and go to state 59
    TYPEBOOL        shift, and go to state 60
    TYPESTR         shift, and go to state 61
    PARENTESESTART  shift, and go to state 62
    MINUS           shift, and go to state 63

    EXP          go to state 109
    AEXP         go to state 65
    listelement  go to state 66
    type         go to state 67
    TERM         go to state 68


State 91

   20 funcall: IDENTIFIER PARENTESESTART arguments PARENTESEEND . END

    END  shift, and go to state 110


State 92

   46 dectype: DECINT .

    $default  reduce using rule 46 (dectype)


State 93

   47 dectype: DECREAL .

    $default  reduce using rule 47 (dectype)


State 94

   45 dectype: DECBOOL .

    $default  reduce using rule 45 (dectype)


State 95

   48 dectype: DECSTR .

    $default  reduce using rule 48 (dectype)


State 96

   28 vardeclaration: KEYVAR IDENTIFIER CURLYSTART dectype . CURLYEND BRACKETSTART EXP BRACKETEND END
   29               | KEYVAR IDENTIFIER CURLYSTART dectype . CURLYEND BRACKETSTART EXP BRACKETEND ASSIGN BRACKETSTART types BRACKETEND END

    CURLYEND  shift, and go to state 111


State 97

   26 vardeclaration: KEYVAR IDENTIFIER TWODOTS dectype . END
   27               | KEYVAR IDENTIFIER TWODOTS dectype . ASSIGN EXP END

    END     shift, and go to state 112
    ASSIGN  shift, and go to state 113


State 98

   30 constdeclaration: KEYCONST IDENTIFIER TWODOTS dectype . ASSIGN EXP END

    ASSIGN  shift, and go to state 114


State 99

   33 condition: KEYIF PARENTESESTART EXP PARENTESEEND . KEYTHEN CURLYSTART ins_seq CURLYEND
   34          | KEYIF PARENTESESTART EXP PARENTESEEND . KEYTHEN CURLYSTART ins_seq CURLYEND KEYELSE CURLYSTART ins_seq CURLYEND

    KEYTHEN  shift, and go to state 115


State 100

   19 return: RETURNKEY PARENTESESTART EXP PARENTESEEND . END

    END  shift, and go to state 116


State 101

    1 program: header SECTDEFKEY MODELS CURLYSTART functions CURLYEND END SECTDEFKEY MAIN CURLYSTART ins_seq CURLYEND END KEY . ENDPROG

    ENDPROG  shift, and go to state 117


State 102

   32 assignment: listelement ASSIGN EXP END .

    $default  reduce using rule 32 (assignment)


State 103

   22 arguments: arguments . COMMA EXP
   35 EXP: IDENTIFIER PARENTESESTART arguments . PARENTESEEND

    COMMA         shift, and go to state 90
    PARENTESEEND  shift, and go to state 118


State 104

   42 AEXP: PARENTESESTART AEXP PARENTESEEND .

    $default  reduce using rule 42 (AEXP)


State 105

   38 AEXP: AEXP . PLUS AEXP
   38     | AEXP PLUS AEXP .
   39     | AEXP . MINUS AEXP
   40     | AEXP . DIV AEXP
   41     | AEXP . MULT AEXP

    MULT  shift, and go to state 87
    DIV   shift, and go to state 88

    $default  reduce using rule 38 (AEXP)


State 106

   38 AEXP: AEXP . PLUS AEXP
   39     | AEXP . MINUS AEXP
   39     | AEXP MINUS AEXP .
   40     | AEXP . DIV AEXP
   41     | AEXP . MULT AEXP

    MULT  shift, and go to state 87
    DIV   shift, and go to state 88

    $default  reduce using rule 39 (AEXP)


State 107

   38 AEXP: AEXP . PLUS AEXP
   39     | AEXP . MINUS AEXP
   40     | AEXP . DIV AEXP
   41     | AEXP . MULT AEXP
   41     | AEXP MULT AEXP .

    $default  reduce using rule 41 (AEXP)


State 108

   38 AEXP: AEXP . PLUS AEXP
   39     | AEXP . MINUS AEXP
   40     | AEXP . DIV AEXP
   40     | AEXP DIV AEXP .
   41     | AEXP . MULT AEXP

    $default  reduce using rule 40 (AEXP)


State 109

   22 arguments: arguments COMMA EXP .

    $default  reduce using rule 22 (arguments)


State 110

   20 funcall: IDENTIFIER PARENTESESTART arguments PARENTESEEND END .

    $default  reduce using rule 20 (funcall)


State 111

   28 vardeclaration: KEYVAR IDENTIFIER CURLYSTART dectype CURLYEND . BRACKETSTART EXP BRACKETEND END
   29               | KEYVAR IDENTIFIER CURLYSTART dectype CURLYEND . BRACKETSTART EXP BRACKETEND ASSIGN BRACKETSTART types BRACKETEND END

    BRACKETSTART  shift, and go to state 119


State 112

   26 vardeclaration: KEYVAR IDENTIFIER TWODOTS dectype END .

    $default  reduce using rule 26 (vardeclaration)


State 113

   27 vardeclaration: KEYVAR IDENTIFIER TWODOTS dectype ASSIGN . EXP END

    IDENTIFIER      shift, and go to state 57
    TYPEINT         shift, and go to state 58
    TYPEREAL        shift, and go to state 59
    TYPEBOOL        shift, and go to state 60
    TYPESTR         shift, and go to state 61
    PARENTESESTART  shift, and go to state 62
    MINUS           shift, and go to state 63

    EXP          go to state 120
    AEXP         go to state 65
    listelement  go to state 66
    type         go to state 67
    TERM         go to state 68


State 114

   30 constdeclaration: KEYCONST IDENTIFIER TWODOTS dectype ASSIGN . EXP END

    IDENTIFIER      shift, and go to state 57
    TYPEINT         shift, and go to state 58
    TYPEREAL        shift, and go to state 59
    TYPEBOOL        shift, and go to state 60
    TYPESTR         shift, and go to state 61
    PARENTESESTART  shift, and go to state 62
    MINUS           shift, and go to state 63

    EXP          go to state 121
    AEXP         go to state 65
    listelement  go to state 66
    type         go to state 67
    TERM         go to state 68


State 115

   33 condition: KEYIF PARENTESESTART EXP PARENTESEEND KEYTHEN . CURLYSTART ins_seq CURLYEND
   34          | KEYIF PARENTESESTART EXP PARENTESEEND KEYTHEN . CURLYSTART ins_seq CURLYEND KEYELSE CURLYSTART ins_seq CURLYEND

    CURLYSTART  shift, and go to state 122


State 116

   19 return: RETURNKEY PARENTESESTART EXP PARENTESEEND END .

    $default  reduce using rule 19 (return)


State 117

    1 program: header SECTDEFKEY MODELS CURLYSTART functions CURLYEND END SECTDEFKEY MAIN CURLYSTART ins_seq CURLYEND END KEY ENDPROG .

    $default  reduce using rule 1 (program)


State 118

   35 EXP: IDENTIFIER PARENTESESTART arguments PARENTESEEND .

    $default  reduce using rule 35 (EXP)


State 119

   28 vardeclaration: KEYVAR IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART . EXP BRACKETEND END
   29               | KEYVAR IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART . EXP BRACKETEND ASSIGN BRACKETSTART types BRACKETEND END

    IDENTIFIER      shift, and go to state 57
    TYPEINT         shift, and go to state 58
    TYPEREAL        shift, and go to state 59
    TYPEBOOL        shift, and go to state 60
    TYPESTR         shift, and go to state 61
    PARENTESESTART  shift, and go to state 62
    MINUS           shift, and go to state 63

    EXP          go to state 123
    AEXP         go to state 65
    listelement  go to state 66
    type         go to state 67
    TERM         go to state 68


State 120

   27 vardeclaration: KEYVAR IDENTIFIER TWODOTS dectype ASSIGN EXP . END

    END  shift, and go to state 124


State 121

   30 constdeclaration: KEYCONST IDENTIFIER TWODOTS dectype ASSIGN EXP . END

    END  shift, and go to state 125


State 122

   33 condition: KEYIF PARENTESESTART EXP PARENTESEEND KEYTHEN CURLYSTART . ins_seq CURLYEND
   34          | KEYIF PARENTESESTART EXP PARENTESEEND KEYTHEN CURLYSTART . ins_seq CURLYEND KEYELSE CURLYSTART ins_seq CURLYEND

    IDENTIFIER  shift, and go to state 30
    KEYVAR      shift, and go to state 31
    KEYCONST    shift, and go to state 32
    KEYIF       shift, and go to state 33
    RETURNKEY   shift, and go to state 34

    $default  reduce using rule 3 (ins_seq)

    ins_seq           go to state 126
    instruction       go to state 36
    return            go to state 37
    funcall           go to state 38
    declaration       go to state 39
    vardeclaration    go to state 40
    constdeclaration  go to state 41
    assignment        go to state 42
    condition         go to state 43
    listelement       go to state 44


State 123

   28 vardeclaration: KEYVAR IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART EXP . BRACKETEND END
   29               | KEYVAR IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART EXP . BRACKETEND ASSIGN BRACKETSTART types BRACKETEND END

    BRACKETEND  shift, and go to state 127


State 124

   27 vardeclaration: KEYVAR IDENTIFIER TWODOTS dectype ASSIGN EXP END .

    $default  reduce using rule 27 (vardeclaration)


State 125

   30 constdeclaration: KEYCONST IDENTIFIER TWODOTS dectype ASSIGN EXP END .

    $default  reduce using rule 30 (constdeclaration)


State 126

   33 condition: KEYIF PARENTESESTART EXP PARENTESEEND KEYTHEN CURLYSTART ins_seq . CURLYEND
   34          | KEYIF PARENTESESTART EXP PARENTESEEND KEYTHEN CURLYSTART ins_seq . CURLYEND KEYELSE CURLYSTART ins_seq CURLYEND

    CURLYEND  shift, and go to state 128


State 127

   28 vardeclaration: KEYVAR IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART EXP BRACKETEND . END
   29               | KEYVAR IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART EXP BRACKETEND . ASSIGN BRACKETSTART types BRACKETEND END

    END     shift, and go to state 129
    ASSIGN  shift, and go to state 130


State 128

   33 condition: KEYIF PARENTESESTART EXP PARENTESEEND KEYTHEN CURLYSTART ins_seq CURLYEND .
   34          | KEYIF PARENTESESTART EXP PARENTESEEND KEYTHEN CURLYSTART ins_seq CURLYEND . KEYELSE CURLYSTART ins_seq CURLYEND

    KEYELSE  shift, and go to state 131

    $default  reduce using rule 33 (condition)


State 129

   28 vardeclaration: KEYVAR IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART EXP BRACKETEND END .

    $default  reduce using rule 28 (vardeclaration)


State 130

   29 vardeclaration: KEYVAR IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART EXP BRACKETEND ASSIGN . BRACKETSTART types BRACKETEND END

    BRACKETSTART  shift, and go to state 132


State 131

   34 condition: KEYIF PARENTESESTART EXP PARENTESEEND KEYTHEN CURLYSTART ins_seq CURLYEND KEYELSE . CURLYSTART ins_seq CURLYEND

    CURLYSTART  shift, and go to state 133


State 132

   29 vardeclaration: KEYVAR IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART EXP BRACKETEND ASSIGN BRACKETSTART . types BRACKETEND END

    TYPEINT   shift, and go to state 58
    TYPEREAL  shift, and go to state 59
    TYPEBOOL  shift, and go to state 60
    TYPESTR   shift, and go to state 61

    $default  reduce using rule 55 (types)

    type   go to state 134
    types  go to state 135


State 133

   34 condition: KEYIF PARENTESESTART EXP PARENTESEEND KEYTHEN CURLYSTART ins_seq CURLYEND KEYELSE CURLYSTART . ins_seq CURLYEND

    IDENTIFIER  shift, and go to state 30
    KEYVAR      shift, and go to state 31
    KEYCONST    shift, and go to state 32
    KEYIF       shift, and go to state 33
    RETURNKEY   shift, and go to state 34

    $default  reduce using rule 3 (ins_seq)

    ins_seq           go to state 136
    instruction       go to state 36
    return            go to state 37
    funcall           go to state 38
    declaration       go to state 39
    vardeclaration    go to state 40
    constdeclaration  go to state 41
    assignment        go to state 42
    condition         go to state 43
    listelement       go to state 44


State 134

   53 types: type .

    $default  reduce using rule 53 (types)


State 135

   29 vardeclaration: KEYVAR IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART EXP BRACKETEND ASSIGN BRACKETSTART types . BRACKETEND END
   54 types: types . COMMA type

    COMMA       shift, and go to state 137
    BRACKETEND  shift, and go to state 138


State 136

   34 condition: KEYIF PARENTESESTART EXP PARENTESEEND KEYTHEN CURLYSTART ins_seq CURLYEND KEYELSE CURLYSTART ins_seq . CURLYEND

    CURLYEND  shift, and go to state 139


State 137

   54 types: types COMMA . type

    TYPEINT   shift, and go to state 58
    TYPEREAL  shift, and go to state 59
    TYPEBOOL  shift, and go to state 60
    TYPESTR   shift, and go to state 61

    type  go to state 140


State 138

   29 vardeclaration: KEYVAR IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART EXP BRACKETEND ASSIGN BRACKETSTART types BRACKETEND . END

    END  shift, and go to state 141


State 139

   34 condition: KEYIF PARENTESESTART EXP PARENTESEEND KEYTHEN CURLYSTART ins_seq CURLYEND KEYELSE CURLYSTART ins_seq CURLYEND .

    $default  reduce using rule 34 (condition)


State 140

   54 types: types COMMA type .

    $default  reduce using rule 54 (types)


State 141

   29 vardeclaration: KEYVAR IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART EXP BRACKETEND ASSIGN BRACKETSTART types BRACKETEND END .

    $default  reduce using rule 29 (vardeclaration)

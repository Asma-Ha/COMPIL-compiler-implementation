Terminals unused in grammar

   token
   TYPEREAL
   TYPEBOOL
   TYPESTR
   AND
   OR
   NOT
   PLUS
   MINUS
   MULT
   DIV
   SUP
   SUPEQ
   INF
   INFEQ
   EQ
   NEQ
   NEG


Grammar

    0 $accept: program $end

    1 $@1: /* empty */

    2 program: $@1 header SECTDEFKEY MODELS CURLYSTART functions CURLYEND END SECTDEFKEY MAIN CURLYSTART ins_seq CURLYEND END KEY ENDPROG

    3 header: KEY PROGKEY IDENTIFIER

    4 ins_seq: /* empty */
    5        | instruction ins_seq

    6 functions: KEYFUN IDENTIFIER PARENTESESTART parameters PARENTESEEND TWODOTS returntype CURLYSTART ins_seq CURLYEND
    7          | /* empty */

    8 parameters: IDENTIFIER
    9           | parameters COMMA IDENTIFIER
   10           | /* empty */

   11 returntype: DECBOOL
   12           | DECINT
   13           | DECREAL
   14           | DECSTR

   15 instruction: declaration
   16            | assignment
   17            | condition
   18            | return
   19            | funcall

   20 return: RETURNKEY PARENTESESTART EXP PARENTESEEND END

   21 funcall: IDENTIFIER PARENTESESTART arguments PARENTESEEND END

   22 arguments: EXP
   23          | arguments COMMA EXP
   24          | /* empty */

   25 declaration: vardeclaration
   26            | constdeclaration

   27 vardeclaration: KEYVAR IDENTIFIER TWODOTS dectype END
   28               | KEYVAR IDENTIFIER TWODOTS dectype ASSIGN EXP END
   29               | KEYARRAY IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART EXP BRACKETEND END
   30               | KEYARRAY IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART EXP BRACKETEND ASSIGN BRACKETSTART EXP BRACKETEND END

   31 constdeclaration: KEYCONST IDENTIFIER TWODOTS dectype ASSIGN EXP END

   32 assignment: IDENTIFIER ASSIGN EXP END
   33           | listelement ASSIGN EXP END

   34 condition: KEYIF PARENTESESTART EXP PARENTESEEND KEYTHEN CURLYSTART ins_seq CURLYEND
   35          | KEYIF PARENTESESTART EXP PARENTESEEND KEYTHEN CURLYSTART ins_seq CURLYEND KEYELSE CURLYSTART ins_seq CURLYEND

   36 EXP: TYPEINT

   37 listelement: IDENTIFIER BRACKETSTART EXP BRACKETEND

   38 dectype: DECBOOL
   39        | DECINT
   40        | DECREAL
   41        | DECSTR


Terminals, with rules where they appear

$end (0) 0
error (256)
KEY (258) 2 3
PROGKEY (259) 3
SECTDEFKEY (260) 2
CURLYSTART (261) 2 6 29 30 34 35
CURLYEND (262) 2 6 29 30 34 35
MODELS (263) 2
MAIN (264) 2
END (265) 2 20 21 27 28 29 30 31 32 33
IDENTIFIER (266) 3 6 8 9 21 27 28 29 30 31 32 37
ENDPROG (267) 2
KEYFUN (268) 6
token (269)
KEYARRAY (270) 29 30
ASSIGN (271) 28 30 31 32 33
KEYVAR (272) 27 28
KEYCONST (273) 31
KEYIF (274) 34 35
KEYELSE (275) 35
KEYTHEN (276) 34 35
TYPEINT (277) 36
TYPEREAL (278)
TYPEBOOL (279)
TYPESTR (280)
TWODOTS (281) 6 27 28 31
DECINT (282) 12 39
DECREAL (283) 13 40
DECBOOL (284) 11 38
DECSTR (285) 14 41
COMMA (286) 9 23
RETURNKEY (287) 20
BRACKETSTART (288) 29 30 37
BRACKETEND (289) 29 30 37
PARENTESESTART (290) 6 20 21 34 35
PARENTESEEND (291) 6 20 21 34 35
AND (292)
OR (293)
NOT (294)
PLUS (295)
MINUS (296)
MULT (297)
DIV (298)
SUP (299)
SUPEQ (300)
INF (301)
INFEQ (302)
EQ (303)
NEQ (304)
NEG (305)


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 2, on right: 0
$@1 (53)
    on left: 1, on right: 2
header (54)
    on left: 3, on right: 2
ins_seq (55)
    on left: 4 5, on right: 2 5 6 34 35
functions (56)
    on left: 6 7, on right: 2
parameters (57)
    on left: 8 9 10, on right: 6 9
returntype (58)
    on left: 11 12 13 14, on right: 6
instruction (59)
    on left: 15 16 17 18 19, on right: 5
return (60)
    on left: 20, on right: 18
funcall (61)
    on left: 21, on right: 19
arguments (62)
    on left: 22 23 24, on right: 21 23
declaration (63)
    on left: 25 26, on right: 15
vardeclaration (64)
    on left: 27 28 29 30, on right: 25
constdeclaration (65)
    on left: 31, on right: 26
assignment (66)
    on left: 32 33, on right: 16
condition (67)
    on left: 34 35, on right: 17
EXP (68)
    on left: 36, on right: 20 22 23 28 29 30 31 32 33 34 35 37
listelement (69)
    on left: 37, on right: 33
dectype (70)
    on left: 38 39 40 41, on right: 27 28 29 30 31


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 . header SECTDEFKEY MODELS CURLYSTART functions CURLYEND END SECTDEFKEY MAIN CURLYSTART ins_seq CURLYEND END KEY ENDPROG

    KEY  shift, and go to state 4

    header  go to state 5


State 3

    0 $accept: program $end .

    $default  accept


State 4

    3 header: KEY . PROGKEY IDENTIFIER

    PROGKEY  shift, and go to state 6


State 5

    2 program: $@1 header . SECTDEFKEY MODELS CURLYSTART functions CURLYEND END SECTDEFKEY MAIN CURLYSTART ins_seq CURLYEND END KEY ENDPROG

    SECTDEFKEY  shift, and go to state 7


State 6

    3 header: KEY PROGKEY . IDENTIFIER

    IDENTIFIER  shift, and go to state 8


State 7

    2 program: $@1 header SECTDEFKEY . MODELS CURLYSTART functions CURLYEND END SECTDEFKEY MAIN CURLYSTART ins_seq CURLYEND END KEY ENDPROG

    MODELS  shift, and go to state 9


State 8

    3 header: KEY PROGKEY IDENTIFIER .

    $default  reduce using rule 3 (header)


State 9

    2 program: $@1 header SECTDEFKEY MODELS . CURLYSTART functions CURLYEND END SECTDEFKEY MAIN CURLYSTART ins_seq CURLYEND END KEY ENDPROG

    CURLYSTART  shift, and go to state 10


State 10

    2 program: $@1 header SECTDEFKEY MODELS CURLYSTART . functions CURLYEND END SECTDEFKEY MAIN CURLYSTART ins_seq CURLYEND END KEY ENDPROG

    KEYFUN  shift, and go to state 11

    $default  reduce using rule 7 (functions)

    functions  go to state 12


State 11

    6 functions: KEYFUN . IDENTIFIER PARENTESESTART parameters PARENTESEEND TWODOTS returntype CURLYSTART ins_seq CURLYEND

    IDENTIFIER  shift, and go to state 13


State 12

    2 program: $@1 header SECTDEFKEY MODELS CURLYSTART functions . CURLYEND END SECTDEFKEY MAIN CURLYSTART ins_seq CURLYEND END KEY ENDPROG

    CURLYEND  shift, and go to state 14


State 13

    6 functions: KEYFUN IDENTIFIER . PARENTESESTART parameters PARENTESEEND TWODOTS returntype CURLYSTART ins_seq CURLYEND

    PARENTESESTART  shift, and go to state 15


State 14

    2 program: $@1 header SECTDEFKEY MODELS CURLYSTART functions CURLYEND . END SECTDEFKEY MAIN CURLYSTART ins_seq CURLYEND END KEY ENDPROG

    END  shift, and go to state 16


State 15

    6 functions: KEYFUN IDENTIFIER PARENTESESTART . parameters PARENTESEEND TWODOTS returntype CURLYSTART ins_seq CURLYEND

    IDENTIFIER  shift, and go to state 17

    $default  reduce using rule 10 (parameters)

    parameters  go to state 18


State 16

    2 program: $@1 header SECTDEFKEY MODELS CURLYSTART functions CURLYEND END . SECTDEFKEY MAIN CURLYSTART ins_seq CURLYEND END KEY ENDPROG

    SECTDEFKEY  shift, and go to state 19


State 17

    8 parameters: IDENTIFIER .

    $default  reduce using rule 8 (parameters)


State 18

    6 functions: KEYFUN IDENTIFIER PARENTESESTART parameters . PARENTESEEND TWODOTS returntype CURLYSTART ins_seq CURLYEND
    9 parameters: parameters . COMMA IDENTIFIER

    COMMA         shift, and go to state 20
    PARENTESEEND  shift, and go to state 21


State 19

    2 program: $@1 header SECTDEFKEY MODELS CURLYSTART functions CURLYEND END SECTDEFKEY . MAIN CURLYSTART ins_seq CURLYEND END KEY ENDPROG

    MAIN  shift, and go to state 22


State 20

    9 parameters: parameters COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 23


State 21

    6 functions: KEYFUN IDENTIFIER PARENTESESTART parameters PARENTESEEND . TWODOTS returntype CURLYSTART ins_seq CURLYEND

    TWODOTS  shift, and go to state 24


State 22

    2 program: $@1 header SECTDEFKEY MODELS CURLYSTART functions CURLYEND END SECTDEFKEY MAIN . CURLYSTART ins_seq CURLYEND END KEY ENDPROG

    CURLYSTART  shift, and go to state 25


State 23

    9 parameters: parameters COMMA IDENTIFIER .

    $default  reduce using rule 9 (parameters)


State 24

    6 functions: KEYFUN IDENTIFIER PARENTESESTART parameters PARENTESEEND TWODOTS . returntype CURLYSTART ins_seq CURLYEND

    DECINT   shift, and go to state 26
    DECREAL  shift, and go to state 27
    DECBOOL  shift, and go to state 28
    DECSTR   shift, and go to state 29

    returntype  go to state 30


State 25

    2 program: $@1 header SECTDEFKEY MODELS CURLYSTART functions CURLYEND END SECTDEFKEY MAIN CURLYSTART . ins_seq CURLYEND END KEY ENDPROG

    IDENTIFIER  shift, and go to state 31
    KEYARRAY    shift, and go to state 32
    KEYVAR      shift, and go to state 33
    KEYCONST    shift, and go to state 34
    KEYIF       shift, and go to state 35
    RETURNKEY   shift, and go to state 36

    $default  reduce using rule 4 (ins_seq)

    ins_seq           go to state 37
    instruction       go to state 38
    return            go to state 39
    funcall           go to state 40
    declaration       go to state 41
    vardeclaration    go to state 42
    constdeclaration  go to state 43
    assignment        go to state 44
    condition         go to state 45
    listelement       go to state 46


State 26

   12 returntype: DECINT .

    $default  reduce using rule 12 (returntype)


State 27

   13 returntype: DECREAL .

    $default  reduce using rule 13 (returntype)


State 28

   11 returntype: DECBOOL .

    $default  reduce using rule 11 (returntype)


State 29

   14 returntype: DECSTR .

    $default  reduce using rule 14 (returntype)


State 30

    6 functions: KEYFUN IDENTIFIER PARENTESESTART parameters PARENTESEEND TWODOTS returntype . CURLYSTART ins_seq CURLYEND

    CURLYSTART  shift, and go to state 47


State 31

   21 funcall: IDENTIFIER . PARENTESESTART arguments PARENTESEEND END
   32 assignment: IDENTIFIER . ASSIGN EXP END
   37 listelement: IDENTIFIER . BRACKETSTART EXP BRACKETEND

    ASSIGN          shift, and go to state 48
    BRACKETSTART    shift, and go to state 49
    PARENTESESTART  shift, and go to state 50


State 32

   29 vardeclaration: KEYARRAY . IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART EXP BRACKETEND END
   30               | KEYARRAY . IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART EXP BRACKETEND ASSIGN BRACKETSTART EXP BRACKETEND END

    IDENTIFIER  shift, and go to state 51


State 33

   27 vardeclaration: KEYVAR . IDENTIFIER TWODOTS dectype END
   28               | KEYVAR . IDENTIFIER TWODOTS dectype ASSIGN EXP END

    IDENTIFIER  shift, and go to state 52


State 34

   31 constdeclaration: KEYCONST . IDENTIFIER TWODOTS dectype ASSIGN EXP END

    IDENTIFIER  shift, and go to state 53


State 35

   34 condition: KEYIF . PARENTESESTART EXP PARENTESEEND KEYTHEN CURLYSTART ins_seq CURLYEND
   35          | KEYIF . PARENTESESTART EXP PARENTESEEND KEYTHEN CURLYSTART ins_seq CURLYEND KEYELSE CURLYSTART ins_seq CURLYEND

    PARENTESESTART  shift, and go to state 54


State 36

   20 return: RETURNKEY . PARENTESESTART EXP PARENTESEEND END

    PARENTESESTART  shift, and go to state 55


State 37

    2 program: $@1 header SECTDEFKEY MODELS CURLYSTART functions CURLYEND END SECTDEFKEY MAIN CURLYSTART ins_seq . CURLYEND END KEY ENDPROG

    CURLYEND  shift, and go to state 56


State 38

    5 ins_seq: instruction . ins_seq

    IDENTIFIER  shift, and go to state 31
    KEYARRAY    shift, and go to state 32
    KEYVAR      shift, and go to state 33
    KEYCONST    shift, and go to state 34
    KEYIF       shift, and go to state 35
    RETURNKEY   shift, and go to state 36

    $default  reduce using rule 4 (ins_seq)

    ins_seq           go to state 57
    instruction       go to state 38
    return            go to state 39
    funcall           go to state 40
    declaration       go to state 41
    vardeclaration    go to state 42
    constdeclaration  go to state 43
    assignment        go to state 44
    condition         go to state 45
    listelement       go to state 46


State 39

   18 instruction: return .

    $default  reduce using rule 18 (instruction)


State 40

   19 instruction: funcall .

    $default  reduce using rule 19 (instruction)


State 41

   15 instruction: declaration .

    $default  reduce using rule 15 (instruction)


State 42

   25 declaration: vardeclaration .

    $default  reduce using rule 25 (declaration)


State 43

   26 declaration: constdeclaration .

    $default  reduce using rule 26 (declaration)


State 44

   16 instruction: assignment .

    $default  reduce using rule 16 (instruction)


State 45

   17 instruction: condition .

    $default  reduce using rule 17 (instruction)


State 46

   33 assignment: listelement . ASSIGN EXP END

    ASSIGN  shift, and go to state 58


State 47

    6 functions: KEYFUN IDENTIFIER PARENTESESTART parameters PARENTESEEND TWODOTS returntype CURLYSTART . ins_seq CURLYEND

    IDENTIFIER  shift, and go to state 31
    KEYARRAY    shift, and go to state 32
    KEYVAR      shift, and go to state 33
    KEYCONST    shift, and go to state 34
    KEYIF       shift, and go to state 35
    RETURNKEY   shift, and go to state 36

    $default  reduce using rule 4 (ins_seq)

    ins_seq           go to state 59
    instruction       go to state 38
    return            go to state 39
    funcall           go to state 40
    declaration       go to state 41
    vardeclaration    go to state 42
    constdeclaration  go to state 43
    assignment        go to state 44
    condition         go to state 45
    listelement       go to state 46


State 48

   32 assignment: IDENTIFIER ASSIGN . EXP END

    TYPEINT  shift, and go to state 60

    EXP  go to state 61


State 49

   37 listelement: IDENTIFIER BRACKETSTART . EXP BRACKETEND

    TYPEINT  shift, and go to state 60

    EXP  go to state 62


State 50

   21 funcall: IDENTIFIER PARENTESESTART . arguments PARENTESEEND END

    TYPEINT  shift, and go to state 60

    $default  reduce using rule 24 (arguments)

    arguments  go to state 63
    EXP        go to state 64


State 51

   29 vardeclaration: KEYARRAY IDENTIFIER . CURLYSTART dectype CURLYEND BRACKETSTART EXP BRACKETEND END
   30               | KEYARRAY IDENTIFIER . CURLYSTART dectype CURLYEND BRACKETSTART EXP BRACKETEND ASSIGN BRACKETSTART EXP BRACKETEND END

    CURLYSTART  shift, and go to state 65


State 52

   27 vardeclaration: KEYVAR IDENTIFIER . TWODOTS dectype END
   28               | KEYVAR IDENTIFIER . TWODOTS dectype ASSIGN EXP END

    TWODOTS  shift, and go to state 66


State 53

   31 constdeclaration: KEYCONST IDENTIFIER . TWODOTS dectype ASSIGN EXP END

    TWODOTS  shift, and go to state 67


State 54

   34 condition: KEYIF PARENTESESTART . EXP PARENTESEEND KEYTHEN CURLYSTART ins_seq CURLYEND
   35          | KEYIF PARENTESESTART . EXP PARENTESEEND KEYTHEN CURLYSTART ins_seq CURLYEND KEYELSE CURLYSTART ins_seq CURLYEND

    TYPEINT  shift, and go to state 60

    EXP  go to state 68


State 55

   20 return: RETURNKEY PARENTESESTART . EXP PARENTESEEND END

    TYPEINT  shift, and go to state 60

    EXP  go to state 69


State 56

    2 program: $@1 header SECTDEFKEY MODELS CURLYSTART functions CURLYEND END SECTDEFKEY MAIN CURLYSTART ins_seq CURLYEND . END KEY ENDPROG

    END  shift, and go to state 70


State 57

    5 ins_seq: instruction ins_seq .

    $default  reduce using rule 5 (ins_seq)


State 58

   33 assignment: listelement ASSIGN . EXP END

    TYPEINT  shift, and go to state 60

    EXP  go to state 71


State 59

    6 functions: KEYFUN IDENTIFIER PARENTESESTART parameters PARENTESEEND TWODOTS returntype CURLYSTART ins_seq . CURLYEND

    CURLYEND  shift, and go to state 72


State 60

   36 EXP: TYPEINT .

    $default  reduce using rule 36 (EXP)


State 61

   32 assignment: IDENTIFIER ASSIGN EXP . END

    END  shift, and go to state 73


State 62

   37 listelement: IDENTIFIER BRACKETSTART EXP . BRACKETEND

    BRACKETEND  shift, and go to state 74


State 63

   21 funcall: IDENTIFIER PARENTESESTART arguments . PARENTESEEND END
   23 arguments: arguments . COMMA EXP

    COMMA         shift, and go to state 75
    PARENTESEEND  shift, and go to state 76


State 64

   22 arguments: EXP .

    $default  reduce using rule 22 (arguments)


State 65

   29 vardeclaration: KEYARRAY IDENTIFIER CURLYSTART . dectype CURLYEND BRACKETSTART EXP BRACKETEND END
   30               | KEYARRAY IDENTIFIER CURLYSTART . dectype CURLYEND BRACKETSTART EXP BRACKETEND ASSIGN BRACKETSTART EXP BRACKETEND END

    DECINT   shift, and go to state 77
    DECREAL  shift, and go to state 78
    DECBOOL  shift, and go to state 79
    DECSTR   shift, and go to state 80

    dectype  go to state 81


State 66

   27 vardeclaration: KEYVAR IDENTIFIER TWODOTS . dectype END
   28               | KEYVAR IDENTIFIER TWODOTS . dectype ASSIGN EXP END

    DECINT   shift, and go to state 77
    DECREAL  shift, and go to state 78
    DECBOOL  shift, and go to state 79
    DECSTR   shift, and go to state 80

    dectype  go to state 82


State 67

   31 constdeclaration: KEYCONST IDENTIFIER TWODOTS . dectype ASSIGN EXP END

    DECINT   shift, and go to state 77
    DECREAL  shift, and go to state 78
    DECBOOL  shift, and go to state 79
    DECSTR   shift, and go to state 80

    dectype  go to state 83


State 68

   34 condition: KEYIF PARENTESESTART EXP . PARENTESEEND KEYTHEN CURLYSTART ins_seq CURLYEND
   35          | KEYIF PARENTESESTART EXP . PARENTESEEND KEYTHEN CURLYSTART ins_seq CURLYEND KEYELSE CURLYSTART ins_seq CURLYEND

    PARENTESEEND  shift, and go to state 84


State 69

   20 return: RETURNKEY PARENTESESTART EXP . PARENTESEEND END

    PARENTESEEND  shift, and go to state 85


State 70

    2 program: $@1 header SECTDEFKEY MODELS CURLYSTART functions CURLYEND END SECTDEFKEY MAIN CURLYSTART ins_seq CURLYEND END . KEY ENDPROG

    KEY  shift, and go to state 86


State 71

   33 assignment: listelement ASSIGN EXP . END

    END  shift, and go to state 87


State 72

    6 functions: KEYFUN IDENTIFIER PARENTESESTART parameters PARENTESEEND TWODOTS returntype CURLYSTART ins_seq CURLYEND .

    $default  reduce using rule 6 (functions)


State 73

   32 assignment: IDENTIFIER ASSIGN EXP END .

    $default  reduce using rule 32 (assignment)


State 74

   37 listelement: IDENTIFIER BRACKETSTART EXP BRACKETEND .

    $default  reduce using rule 37 (listelement)


State 75

   23 arguments: arguments COMMA . EXP

    TYPEINT  shift, and go to state 60

    EXP  go to state 88


State 76

   21 funcall: IDENTIFIER PARENTESESTART arguments PARENTESEEND . END

    END  shift, and go to state 89


State 77

   39 dectype: DECINT .

    $default  reduce using rule 39 (dectype)


State 78

   40 dectype: DECREAL .

    $default  reduce using rule 40 (dectype)


State 79

   38 dectype: DECBOOL .

    $default  reduce using rule 38 (dectype)


State 80

   41 dectype: DECSTR .

    $default  reduce using rule 41 (dectype)


State 81

   29 vardeclaration: KEYARRAY IDENTIFIER CURLYSTART dectype . CURLYEND BRACKETSTART EXP BRACKETEND END
   30               | KEYARRAY IDENTIFIER CURLYSTART dectype . CURLYEND BRACKETSTART EXP BRACKETEND ASSIGN BRACKETSTART EXP BRACKETEND END

    CURLYEND  shift, and go to state 90


State 82

   27 vardeclaration: KEYVAR IDENTIFIER TWODOTS dectype . END
   28               | KEYVAR IDENTIFIER TWODOTS dectype . ASSIGN EXP END

    END     shift, and go to state 91
    ASSIGN  shift, and go to state 92


State 83

   31 constdeclaration: KEYCONST IDENTIFIER TWODOTS dectype . ASSIGN EXP END

    ASSIGN  shift, and go to state 93


State 84

   34 condition: KEYIF PARENTESESTART EXP PARENTESEEND . KEYTHEN CURLYSTART ins_seq CURLYEND
   35          | KEYIF PARENTESESTART EXP PARENTESEEND . KEYTHEN CURLYSTART ins_seq CURLYEND KEYELSE CURLYSTART ins_seq CURLYEND

    KEYTHEN  shift, and go to state 94


State 85

   20 return: RETURNKEY PARENTESESTART EXP PARENTESEEND . END

    END  shift, and go to state 95


State 86

    2 program: $@1 header SECTDEFKEY MODELS CURLYSTART functions CURLYEND END SECTDEFKEY MAIN CURLYSTART ins_seq CURLYEND END KEY . ENDPROG

    ENDPROG  shift, and go to state 96


State 87

   33 assignment: listelement ASSIGN EXP END .

    $default  reduce using rule 33 (assignment)


State 88

   23 arguments: arguments COMMA EXP .

    $default  reduce using rule 23 (arguments)


State 89

   21 funcall: IDENTIFIER PARENTESESTART arguments PARENTESEEND END .

    $default  reduce using rule 21 (funcall)


State 90

   29 vardeclaration: KEYARRAY IDENTIFIER CURLYSTART dectype CURLYEND . BRACKETSTART EXP BRACKETEND END
   30               | KEYARRAY IDENTIFIER CURLYSTART dectype CURLYEND . BRACKETSTART EXP BRACKETEND ASSIGN BRACKETSTART EXP BRACKETEND END

    BRACKETSTART  shift, and go to state 97


State 91

   27 vardeclaration: KEYVAR IDENTIFIER TWODOTS dectype END .

    $default  reduce using rule 27 (vardeclaration)


State 92

   28 vardeclaration: KEYVAR IDENTIFIER TWODOTS dectype ASSIGN . EXP END

    TYPEINT  shift, and go to state 60

    EXP  go to state 98


State 93

   31 constdeclaration: KEYCONST IDENTIFIER TWODOTS dectype ASSIGN . EXP END

    TYPEINT  shift, and go to state 60

    EXP  go to state 99


State 94

   34 condition: KEYIF PARENTESESTART EXP PARENTESEEND KEYTHEN . CURLYSTART ins_seq CURLYEND
   35          | KEYIF PARENTESESTART EXP PARENTESEEND KEYTHEN . CURLYSTART ins_seq CURLYEND KEYELSE CURLYSTART ins_seq CURLYEND

    CURLYSTART  shift, and go to state 100


State 95

   20 return: RETURNKEY PARENTESESTART EXP PARENTESEEND END .

    $default  reduce using rule 20 (return)


State 96

    2 program: $@1 header SECTDEFKEY MODELS CURLYSTART functions CURLYEND END SECTDEFKEY MAIN CURLYSTART ins_seq CURLYEND END KEY ENDPROG .

    $default  reduce using rule 2 (program)


State 97

   29 vardeclaration: KEYARRAY IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART . EXP BRACKETEND END
   30               | KEYARRAY IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART . EXP BRACKETEND ASSIGN BRACKETSTART EXP BRACKETEND END

    TYPEINT  shift, and go to state 60

    EXP  go to state 101


State 98

   28 vardeclaration: KEYVAR IDENTIFIER TWODOTS dectype ASSIGN EXP . END

    END  shift, and go to state 102


State 99

   31 constdeclaration: KEYCONST IDENTIFIER TWODOTS dectype ASSIGN EXP . END

    END  shift, and go to state 103


State 100

   34 condition: KEYIF PARENTESESTART EXP PARENTESEEND KEYTHEN CURLYSTART . ins_seq CURLYEND
   35          | KEYIF PARENTESESTART EXP PARENTESEEND KEYTHEN CURLYSTART . ins_seq CURLYEND KEYELSE CURLYSTART ins_seq CURLYEND

    IDENTIFIER  shift, and go to state 31
    KEYARRAY    shift, and go to state 32
    KEYVAR      shift, and go to state 33
    KEYCONST    shift, and go to state 34
    KEYIF       shift, and go to state 35
    RETURNKEY   shift, and go to state 36

    $default  reduce using rule 4 (ins_seq)

    ins_seq           go to state 104
    instruction       go to state 38
    return            go to state 39
    funcall           go to state 40
    declaration       go to state 41
    vardeclaration    go to state 42
    constdeclaration  go to state 43
    assignment        go to state 44
    condition         go to state 45
    listelement       go to state 46


State 101

   29 vardeclaration: KEYARRAY IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART EXP . BRACKETEND END
   30               | KEYARRAY IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART EXP . BRACKETEND ASSIGN BRACKETSTART EXP BRACKETEND END

    BRACKETEND  shift, and go to state 105


State 102

   28 vardeclaration: KEYVAR IDENTIFIER TWODOTS dectype ASSIGN EXP END .

    $default  reduce using rule 28 (vardeclaration)


State 103

   31 constdeclaration: KEYCONST IDENTIFIER TWODOTS dectype ASSIGN EXP END .

    $default  reduce using rule 31 (constdeclaration)


State 104

   34 condition: KEYIF PARENTESESTART EXP PARENTESEEND KEYTHEN CURLYSTART ins_seq . CURLYEND
   35          | KEYIF PARENTESESTART EXP PARENTESEEND KEYTHEN CURLYSTART ins_seq . CURLYEND KEYELSE CURLYSTART ins_seq CURLYEND

    CURLYEND  shift, and go to state 106


State 105

   29 vardeclaration: KEYARRAY IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART EXP BRACKETEND . END
   30               | KEYARRAY IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART EXP BRACKETEND . ASSIGN BRACKETSTART EXP BRACKETEND END

    END     shift, and go to state 107
    ASSIGN  shift, and go to state 108


State 106

   34 condition: KEYIF PARENTESESTART EXP PARENTESEEND KEYTHEN CURLYSTART ins_seq CURLYEND .
   35          | KEYIF PARENTESESTART EXP PARENTESEEND KEYTHEN CURLYSTART ins_seq CURLYEND . KEYELSE CURLYSTART ins_seq CURLYEND

    KEYELSE  shift, and go to state 109

    $default  reduce using rule 34 (condition)


State 107

   29 vardeclaration: KEYARRAY IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART EXP BRACKETEND END .

    $default  reduce using rule 29 (vardeclaration)


State 108

   30 vardeclaration: KEYARRAY IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART EXP BRACKETEND ASSIGN . BRACKETSTART EXP BRACKETEND END

    BRACKETSTART  shift, and go to state 110


State 109

   35 condition: KEYIF PARENTESESTART EXP PARENTESEEND KEYTHEN CURLYSTART ins_seq CURLYEND KEYELSE . CURLYSTART ins_seq CURLYEND

    CURLYSTART  shift, and go to state 111


State 110

   30 vardeclaration: KEYARRAY IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART EXP BRACKETEND ASSIGN BRACKETSTART . EXP BRACKETEND END

    TYPEINT  shift, and go to state 60

    EXP  go to state 112


State 111

   35 condition: KEYIF PARENTESESTART EXP PARENTESEEND KEYTHEN CURLYSTART ins_seq CURLYEND KEYELSE CURLYSTART . ins_seq CURLYEND

    IDENTIFIER  shift, and go to state 31
    KEYARRAY    shift, and go to state 32
    KEYVAR      shift, and go to state 33
    KEYCONST    shift, and go to state 34
    KEYIF       shift, and go to state 35
    RETURNKEY   shift, and go to state 36

    $default  reduce using rule 4 (ins_seq)

    ins_seq           go to state 113
    instruction       go to state 38
    return            go to state 39
    funcall           go to state 40
    declaration       go to state 41
    vardeclaration    go to state 42
    constdeclaration  go to state 43
    assignment        go to state 44
    condition         go to state 45
    listelement       go to state 46


State 112

   30 vardeclaration: KEYARRAY IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART EXP BRACKETEND ASSIGN BRACKETSTART EXP . BRACKETEND END

    BRACKETEND  shift, and go to state 114


State 113

   35 condition: KEYIF PARENTESESTART EXP PARENTESEEND KEYTHEN CURLYSTART ins_seq CURLYEND KEYELSE CURLYSTART ins_seq . CURLYEND

    CURLYEND  shift, and go to state 115


State 114

   30 vardeclaration: KEYARRAY IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART EXP BRACKETEND ASSIGN BRACKETSTART EXP BRACKETEND . END

    END  shift, and go to state 116


State 115

   35 condition: KEYIF PARENTESESTART EXP PARENTESEEND KEYTHEN CURLYSTART ins_seq CURLYEND KEYELSE CURLYSTART ins_seq CURLYEND .

    $default  reduce using rule 35 (condition)


State 116

   30 vardeclaration: KEYARRAY IDENTIFIER CURLYSTART dectype CURLYEND BRACKETSTART EXP BRACKETEND ASSIGN BRACKETSTART EXP BRACKETEND END .

    $default  reduce using rule 30 (vardeclaration)
